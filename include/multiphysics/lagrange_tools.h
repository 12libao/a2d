#ifndef A2D_LAGRANGE_TOOLS
#define A2D_LAGRANGE_TOOLS

#include "a2dobjs.h"

namespace A2D {

struct GaussQuadData {
  static constexpr double GaussQuadPts1[] = {0.0000000000000000e+00};
  static constexpr double GaussQuadWts1[] = {2.0000000000000000e+00};
  static constexpr double GaussQuadPts2[] = {-5.7735026918962573e-01,
                                             5.7735026918962573e-01};
  static constexpr double GaussQuadWts2[] = {1.0000000000000000e+00,
                                             1.0000000000000000e+00};
  static constexpr double GaussQuadPts3[] = {
      -7.7459666924148340e-01, 0.0000000000000000e+00, 7.7459666924148340e-01};
  static constexpr double GaussQuadWts3[] = {
      5.5555555555555569e-01, 8.8888888888888884e-01, 5.5555555555555569e-01};
  static constexpr double GaussQuadPts4[] = {
      -8.6113631159405257e-01, -3.3998104358485626e-01, 3.3998104358485626e-01,
      8.6113631159405257e-01};
  static constexpr double GaussQuadWts4[] = {
      3.4785484513745368e-01, 6.5214515486254621e-01, 6.5214515486254621e-01,
      3.4785484513745368e-01};
  static constexpr double GaussQuadPts5[] = {
      -9.0617984593866396e-01, -5.3846931010568311e-01, 0.0000000000000000e+00,
      5.3846931010568311e-01, 9.0617984593866396e-01};
  static constexpr double GaussQuadWts5[] = {
      2.3692688505618942e-01, 4.7862867049936619e-01, 5.6888888888888900e-01,
      4.7862867049936619e-01, 2.3692688505618942e-01};
  static constexpr double GaussQuadPts6[] = {
      -9.3246951420315205e-01, -6.6120938646626448e-01, -2.3861918608319693e-01,
      2.3861918608319693e-01,  6.6120938646626448e-01,  9.3246951420315205e-01};
  static constexpr double GaussQuadWts6[] = {
      1.7132449237916975e-01, 3.6076157304813894e-01, 4.6791393457269137e-01,
      4.6791393457269137e-01, 3.6076157304813894e-01, 1.7132449237916975e-01};
  static constexpr double GaussQuadPts7[] = {
      -9.4910791234275849e-01, -7.4153118559939446e-01, -4.0584515137739718e-01,
      0.0000000000000000e+00,  4.0584515137739718e-01,  7.4153118559939446e-01,
      9.4910791234275849e-01};
  static constexpr double GaussQuadWts7[] = {
      1.2948496616887065e-01, 2.7970539148927659e-01, 3.8183005050511831e-01,
      4.1795918367346896e-01, 3.8183005050511831e-01, 2.7970539148927659e-01,
      1.2948496616887065e-01};
  static constexpr double GaussQuadPts8[] = {
      -9.6028985649753618e-01, -7.9666647741362673e-01, -5.2553240991632899e-01,
      -1.8343464249564978e-01, 1.8343464249564978e-01,  5.2553240991632899e-01,
      7.9666647741362673e-01,  9.6028985649753618e-01};
  static constexpr double GaussQuadWts8[] = {
      1.0122853629037669e-01, 2.2238103445337434e-01, 3.1370664587788705e-01,
      3.6268378337836177e-01, 3.6268378337836177e-01, 3.1370664587788705e-01,
      2.2238103445337434e-01, 1.0122853629037669e-01};
  static constexpr double GaussQuadPts9[] = {
      -9.6816023950762609e-01, -8.3603110732663577e-01, -6.1337143270059036e-01,
      -3.2425342340380892e-01, 0.0000000000000000e+00,  3.2425342340380892e-01,
      6.1337143270059036e-01,  8.3603110732663577e-01,  9.6816023950762609e-01};
  static constexpr double GaussQuadWts9[] = {
      8.1274388361574718e-02, 1.8064816069485712e-01, 2.6061069640293566e-01,
      3.1234707704000281e-01, 3.3023935500125967e-01, 3.1234707704000281e-01,
      2.6061069640293566e-01, 1.8064816069485712e-01, 8.1274388361574718e-02};
  static constexpr double GaussQuadPts10[] = {
      -9.7390652851717174e-01, -8.6506336668898454e-01, -6.7940956829902444e-01,
      -4.3339539412924721e-01, -1.4887433898163122e-01, 1.4887433898163122e-01,
      4.3339539412924721e-01,  6.7940956829902444e-01,  8.6506336668898454e-01,
      9.7390652851717174e-01};
  static constexpr double GaussQuadWts10[] = {
      6.6671344308688069e-02, 1.4945134915058036e-01, 2.1908636251598201e-01,
      2.6926671930999652e-01, 2.9552422471475298e-01, 2.9552422471475298e-01,
      2.6926671930999652e-01, 2.1908636251598201e-01, 1.4945134915058036e-01,
      6.6671344308688069e-02};
  static constexpr double GaussQuadPts11[] = {
      -9.7822865814605697e-01, -8.8706259976809532e-01, -7.3015200557404936e-01,
      -5.1909612920681181e-01, -2.6954315595234496e-01, 0.0000000000000000e+00,
      2.6954315595234496e-01,  5.1909612920681181e-01,  7.3015200557404936e-01,
      8.8706259976809532e-01,  9.7822865814605697e-01};
  static constexpr double GaussQuadWts11[] = {
      5.5668567116173164e-02, 1.2558036946490470e-01, 1.8629021092773443e-01,
      2.3319376459199068e-01, 2.6280454451024676e-01, 2.7292508677790089e-01,
      2.6280454451024676e-01, 2.3319376459199068e-01, 1.8629021092773443e-01,
      1.2558036946490470e-01, 5.5668567116173164e-02};
  static constexpr double GaussQuadPts12[] = {
      -9.8156063424671924e-01, -9.0411725637047480e-01, -7.6990267419430469e-01,
      -5.8731795428661748e-01, -3.6783149899818018e-01, -1.2523340851146891e-01,
      1.2523340851146891e-01,  3.6783149899818018e-01,  5.8731795428661748e-01,
      7.6990267419430469e-01,  9.0411725637047480e-01,  9.8156063424671924e-01};
  static constexpr double GaussQuadWts12[] = {
      4.7175336386512022e-02, 1.0693932599531888e-01, 1.6007832854334611e-01,
      2.0316742672306565e-01, 2.3349253653835464e-01, 2.4914704581340269e-01,
      2.4914704581340269e-01, 2.3349253653835464e-01, 2.0316742672306565e-01,
      1.6007832854334611e-01, 1.0693932599531888e-01, 4.7175336386512022e-02};
  static constexpr double GaussQuadPts13[] = {
      -9.8418305471858814e-01, -9.1759839922297792e-01, -8.0157809073330988e-01,
      -6.4234933944034023e-01, -4.4849275103644681e-01, -2.3045831595513477e-01,
      0.0000000000000000e+00,  2.3045831595513477e-01,  4.4849275103644681e-01,
      6.4234933944034023e-01,  8.0157809073330988e-01,  9.1759839922297792e-01,
      9.8418305471858814e-01};
  static constexpr double GaussQuadWts13[] = {
      4.0484004765315877e-02, 9.2121499837728604e-02, 1.3887351021978736e-01,
      1.7814598076194552e-01, 2.0781604753688857e-01, 2.2628318026289715e-01,
      2.3255155323087390e-01, 2.2628318026289715e-01, 2.0781604753688857e-01,
      1.7814598076194552e-01, 1.3887351021978736e-01, 9.2121499837728604e-02,
      4.0484004765315877e-02};
  static constexpr double GaussQuadPts14[] = {
      -9.8628380869681231e-01, -9.2843488366357352e-01, -8.2720131506976502e-01,
      -6.8729290481168548e-01, -5.1524863635815410e-01, -3.1911236892788974e-01,
      -1.0805494870734367e-01, 1.0805494870734367e-01,  3.1911236892788974e-01,
      5.1524863635815410e-01,  6.8729290481168548e-01,  8.2720131506976502e-01,
      9.2843488366357352e-01,  9.8628380869681231e-01};
  static constexpr double GaussQuadWts14[] = {
      3.5119460331752374e-02, 8.0158087159760305e-02, 1.2151857068790296e-01,
      1.5720316715819341e-01, 1.8553839747793763e-01, 2.0519846372129555e-01,
      2.1526385346315766e-01, 2.1526385346315766e-01, 2.0519846372129555e-01,
      1.8553839747793763e-01, 1.5720316715819341e-01, 1.2151857068790296e-01,
      8.0158087159760305e-02, 3.5119460331752374e-02};
  static constexpr double GaussQuadPts15[] = {
      -9.8799251802048538e-01, -9.3727339240070595e-01, -8.4820658341042721e-01,
      -7.2441773136017007e-01, -5.7097217260853883e-01, -3.9415134707756339e-01,
      -2.0119409399743451e-01, 0.0000000000000000e+00,  2.0119409399743451e-01,
      3.9415134707756339e-01,  5.7097217260853883e-01,  7.2441773136017007e-01,
      8.4820658341042721e-01,  9.3727339240070595e-01,  9.8799251802048538e-01};
  static constexpr double GaussQuadWts15[] = {
      3.0753241996118647e-02, 7.0366047488108069e-02, 1.0715922046717177e-01,
      1.3957067792615391e-01, 1.6626920581699378e-01, 1.8616100001556188e-01,
      1.9843148532711125e-01, 2.0257824192556090e-01, 1.9843148532711125e-01,
      1.8616100001556188e-01, 1.6626920581699378e-01, 1.3957067792615391e-01,
      1.0715922046717177e-01, 7.0366047488108069e-02, 3.0753241996118647e-02};
  static constexpr double GaussQuadPts16[] = {
      -9.8940093499164994e-01, -9.4457502307323260e-01, -8.6563120238783176e-01,
      -7.5540440835500300e-01, -6.1787624440264377e-01, -4.5801677765722737e-01,
      -2.8160355077925892e-01, -9.5012509837637454e-02, 9.5012509837637454e-02,
      2.8160355077925892e-01,  4.5801677765722737e-01,  6.1787624440264377e-01,
      7.5540440835500300e-01,  8.6563120238783176e-01,  9.4457502307323260e-01,
      9.8940093499164994e-01};
  static constexpr double GaussQuadWts16[] = {
      2.7152459411754037e-02, 6.2253523938647706e-02, 9.5158511682492591e-02,
      1.2462897125553403e-01, 1.4959598881657676e-01, 1.6915651939500262e-01,
      1.8260341504492361e-01, 1.8945061045506859e-01, 1.8945061045506859e-01,
      1.8260341504492361e-01, 1.6915651939500262e-01, 1.4959598881657676e-01,
      1.2462897125553403e-01, 9.5158511682492591e-02, 6.2253523938647706e-02,
      2.7152459411754037e-02};
  static constexpr double GaussQuadPts17[] = {
      -9.9057547531441736e-01, -9.5067552176876780e-01, -8.8023915372698591e-01,
      -7.8151400389680137e-01, -6.5767115921669084e-01, -5.1269053708647694e-01,
      -3.5123176345387630e-01, -1.7848418149584785e-01, 0.0000000000000000e+00,
      1.7848418149584785e-01,  3.5123176345387630e-01,  5.1269053708647694e-01,
      6.5767115921669084e-01,  7.8151400389680137e-01,  8.8023915372698591e-01,
      9.5067552176876780e-01,  9.9057547531441736e-01};
  static constexpr double GaussQuadWts17[] = {
      2.4148302868549520e-02, 5.5459529373986599e-02, 8.5036148317179081e-02,
      1.1188384719340365e-01, 1.3513636846852523e-01, 1.5404576107681012e-01,
      1.6800410215644995e-01, 1.7656270536699253e-01, 1.7944647035620653e-01,
      1.7656270536699253e-01, 1.6800410215644995e-01, 1.5404576107681012e-01,
      1.3513636846852523e-01, 1.1188384719340365e-01, 8.5036148317179081e-02,
      5.5459529373986599e-02, 2.4148302868549520e-02};
  static constexpr double GaussQuadPts18[] = {
      -9.9156516842093090e-01, -9.5582394957139782e-01, -8.9260246649755570e-01,
      -8.0370495897252314e-01, -6.9168704306035322e-01, -5.5977083107394754e-01,
      -4.1175116146284263e-01, -2.5188622569150548e-01, -8.4775013041735292e-02,
      8.4775013041735292e-02,  2.5188622569150548e-01,  4.1175116146284263e-01,
      5.5977083107394754e-01,  6.9168704306035322e-01,  8.0370495897252314e-01,
      8.9260246649755570e-01,  9.5582394957139782e-01,  9.9156516842093090e-01};
  static constexpr double GaussQuadWts18[] = {
      2.1616013526484130e-02, 4.9714548894969221e-02, 7.6425730254889246e-02,
      1.0094204410628699e-01, 1.2255520671147836e-01, 1.4064291467065063e-01,
      1.5468467512626521e-01, 1.6427648374583273e-01, 1.6914238296314363e-01,
      1.6914238296314363e-01, 1.6427648374583273e-01, 1.5468467512626521e-01,
      1.4064291467065063e-01, 1.2255520671147836e-01, 1.0094204410628699e-01,
      7.6425730254889246e-02, 4.9714548894969221e-02, 2.1616013526484130e-02};
  static constexpr double GaussQuadPts19[] = {
      -9.9240684384358435e-01, -9.6020815213483002e-01, -9.0315590361481790e-01,
      -8.2271465653714282e-01, -7.2096617733522939e-01, -6.0054530466168099e-01,
      -4.6457074137596094e-01, -3.1656409996362983e-01, -1.6035864564022539e-01,
      0.0000000000000000e+00,  1.6035864564022539e-01,  3.1656409996362983e-01,
      4.6457074137596094e-01,  6.0054530466168099e-01,  7.2096617733522939e-01,
      8.2271465653714282e-01,  9.0315590361481790e-01,  9.6020815213483002e-01,
      9.9240684384358435e-01};
  static constexpr double GaussQuadWts19[] = {
      1.9461788229727609e-02, 4.4814226765699808e-02, 6.9044542737641074e-02,
      9.1490021622449846e-02, 1.1156664554733375e-01, 1.2875396253933619e-01,
      1.4260670217360638e-01, 1.5276604206585945e-01, 1.5896884339395415e-01,
      1.6105444984878345e-01, 1.5896884339395415e-01, 1.5276604206585945e-01,
      1.4260670217360638e-01, 1.2875396253933619e-01, 1.1156664554733375e-01,
      9.1490021622449846e-02, 6.9044542737641074e-02, 4.4814226765699808e-02,
      1.9461788229727609e-02};
  static constexpr double GaussQuadPts20[] = {
      -9.9312859918509488e-01, -9.6397192727791381e-01, -9.1223442825132584e-01,
      -8.3911697182221878e-01, -7.4633190646015080e-01, -6.3605368072651502e-01,
      -5.1086700195082713e-01, -3.7370608871541955e-01, -2.2778585114164510e-01,
      -7.6526521133497338e-02, 7.6526521133497338e-02,  2.2778585114164510e-01,
      3.7370608871541955e-01,  5.1086700195082713e-01,  6.3605368072651502e-01,
      7.4633190646015080e-01,  8.3911697182221878e-01,  9.1223442825132584e-01,
      9.6397192727791381e-01,  9.9312859918509488e-01};
  static constexpr double GaussQuadWts20[] = {
      1.7614007139153273e-02, 4.0601429800386217e-02, 6.2672048334109443e-02,
      8.3276741576704671e-02, 1.0193011981724026e-01, 1.1819453196151825e-01,
      1.3168863844917653e-01, 1.4209610931838187e-01, 1.4917298647260366e-01,
      1.5275338713072578e-01, 1.5275338713072578e-01, 1.4917298647260366e-01,
      1.4209610931838187e-01, 1.3168863844917653e-01, 1.1819453196151825e-01,
      1.0193011981724026e-01, 8.3276741576704671e-02, 6.2672048334109443e-02,
      4.0601429800386217e-02, 1.7614007139153273e-02};
  static constexpr double GaussQuadPts21[] = {
      -9.9375217062038945e-01, -9.6722683856630631e-01, -9.2009933415040079e-01,
      -8.5336336458331730e-01, -7.6843996347567789e-01, -6.6713880419741234e-01,
      -5.5161883588721983e-01, -4.2434212020743878e-01, -2.8802131680240112e-01,
      -1.4556185416089509e-01, 0.0000000000000000e+00,  1.4556185416089509e-01,
      2.8802131680240112e-01,  4.2434212020743878e-01,  5.5161883588721983e-01,
      6.6713880419741234e-01,  7.6843996347567789e-01,  8.5336336458331730e-01,
      9.2009933415040079e-01,  9.6722683856630631e-01,  9.9375217062038945e-01};
  static constexpr double GaussQuadWts21[] = {
      1.6017228257774137e-02, 3.6953789770852917e-02, 5.7134425426857156e-02,
      7.6100113628379346e-02, 9.3444423456033820e-02, 1.0879729916714831e-01,
      1.2183141605372842e-01, 1.3226893863333739e-01, 1.3988739479107312e-01,
      1.4452440398997007e-01, 1.4608113364969047e-01, 1.4452440398997007e-01,
      1.3988739479107312e-01, 1.3226893863333739e-01, 1.2183141605372842e-01,
      1.0879729916714831e-01, 9.3444423456033820e-02, 7.6100113628379346e-02,
      5.7134425426857156e-02, 3.6953789770852917e-02, 1.6017228257774137e-02};
  static constexpr double GaussQuadPts22[] = {
      -9.9429458548239924e-01, -9.7006049783542869e-01, -9.2695677218717398e-01,
      -8.6581257772030018e-01, -7.8781680597920811e-01, -6.9448726318668275e-01,
      -5.8764040350691160e-01, -4.6935583798675706e-01, -3.4193582089208424e-01,
      -2.0786042668822130e-01, -6.9739273319722211e-02, 6.9739273319722211e-02,
      2.0786042668822130e-01,  3.4193582089208424e-01,  4.6935583798675706e-01,
      5.8764040350691160e-01,  6.9448726318668275e-01,  7.8781680597920811e-01,
      8.6581257772030018e-01,  9.2695677218717398e-01,  9.7006049783542869e-01,
      9.9429458548239924e-01};
  static constexpr double GaussQuadWts22[] = {
      1.4627995298274705e-02, 3.3774901584815178e-02, 5.2293335152682870e-02,
      6.9796468424520197e-02, 8.5941606217067396e-02, 1.0041414444288072e-01,
      1.1293229608053883e-01, 1.2325237681051199e-01, 1.3117350478706188e-01,
      1.3654149834601478e-01, 1.3925187285563156e-01, 1.3925187285563156e-01,
      1.3654149834601478e-01, 1.3117350478706188e-01, 1.2325237681051199e-01,
      1.1293229608053883e-01, 1.0041414444288072e-01, 8.5941606217067396e-02,
      6.9796468424520197e-02, 5.2293335152682870e-02, 3.3774901584815178e-02,
      1.4627995298274705e-02};
  static constexpr double GaussQuadPts23[] = {
      -9.9476933499755216e-01, -9.7254247121811521e-01, -9.3297108682601615e-01,
      -8.7675235827044162e-01, -8.0488840161883990e-01, -7.1866136313195017e-01,
      -6.1960987576364612e-01, -5.0950147784600752e-01, -3.9030103803029081e-01,
      -2.6413568097034495e-01, -1.3325682429846611e-01, 0.0000000000000000e+00,
      1.3325682429846611e-01,  2.6413568097034495e-01,  3.9030103803029081e-01,
      5.0950147784600752e-01,  6.1960987576364612e-01,  7.1866136313195017e-01,
      8.0488840161883990e-01,  8.7675235827044162e-01,  9.3297108682601615e-01,
      9.7254247121811521e-01,  9.9476933499755216e-01};
  static constexpr double GaussQuadWts23[] = {
      1.3411859487141846e-02, 3.0988005856979497e-02, 4.8037671731084947e-02,
      6.4232421408526058e-02, 7.9281411776718866e-02, 9.2915766060035238e-02,
      1.0489209146454138e-01, 1.1499664022241129e-01, 1.2304908430672945e-01,
      1.2890572218808199e-01, 1.3246203940469642e-01, 1.3365457218610594e-01,
      1.3246203940469642e-01, 1.2890572218808199e-01, 1.2304908430672945e-01,
      1.1499664022241129e-01, 1.0489209146454138e-01, 9.2915766060035238e-02,
      7.9281411776718866e-02, 6.4232421408526058e-02, 4.8037671731084947e-02,
      3.0988005856979497e-02, 1.3411859487141846e-02};
  static constexpr double GaussQuadPts24[] = {
      -9.9518721999702131e-01, -9.7472855597130947e-01, -9.3827455200273280e-01,
      -8.8641552700440096e-01, -8.2000198597390295e-01, -7.4012419157855436e-01,
      -6.4809365193697555e-01, -5.4542147138883956e-01, -4.3379350762604513e-01,
      -3.1504267969616340e-01, -1.9111886747361631e-01, -6.4056892862605630e-02,
      6.4056892862605630e-02,  1.9111886747361631e-01,  3.1504267969616340e-01,
      4.3379350762604513e-01,  5.4542147138883956e-01,  6.4809365193697555e-01,
      7.4012419157855436e-01,  8.2000198597390295e-01,  8.8641552700440096e-01,
      9.3827455200273280e-01,  9.7472855597130947e-01,  9.9518721999702131e-01};
  static constexpr double GaussQuadWts24[] = {
      1.2341229799987091e-02, 2.8531388628933743e-02, 4.4277438817419551e-02,
      5.9298584915436742e-02, 7.3346481411080411e-02, 8.6190161531953288e-02,
      9.7618652104114065e-02, 1.0744427011596561e-01, 1.1550566805372561e-01,
      1.2167047292780342e-01, 1.2583745634682830e-01, 1.2793819534675221e-01,
      1.2793819534675221e-01, 1.2583745634682830e-01, 1.2167047292780342e-01,
      1.1550566805372561e-01, 1.0744427011596561e-01, 9.7618652104114065e-02,
      8.6190161531953288e-02, 7.3346481411080411e-02, 5.9298584915436742e-02,
      4.4277438817419551e-02, 2.8531388628933743e-02, 1.2341229799987091e-02};
  static constexpr double GaussQuadPts25[] = {
      -9.9555696979049801e-01, -9.7666392145951753e-01, -9.4297457122897432e-01,
      -8.9499199787827532e-01, -8.3344262876083397e-01, -7.5925926303735758e-01,
      -6.7356636847346840e-01, -5.7766293024122295e-01, -4.7300273144571497e-01,
      -3.6117230580938786e-01, -2.4386688372098841e-01, -1.2286469261071040e-01,
      0.0000000000000000e+00,  1.2286469261071040e-01,  2.4386688372098841e-01,
      3.6117230580938786e-01,  4.7300273144571497e-01,  5.7766293024122295e-01,
      6.7356636847346840e-01,  7.5925926303735758e-01,  8.3344262876083397e-01,
      8.9499199787827532e-01,  9.4297457122897432e-01,  9.7666392145951753e-01,
      9.9555696979049801e-01};
  static constexpr double GaussQuadWts25[] = {
      1.1393798501027593e-02, 2.6354986615031908e-02, 4.0939156701306503e-02,
      5.4904695975835437e-02, 6.8038333812357008e-02, 8.0140700335000981e-02,
      9.1028261982963377e-02, 1.0053594906705049e-01, 1.0851962447426344e-01,
      1.1485825914571146e-01, 1.1945576353578451e-01, 1.2224244299030987e-01,
      1.2317605372671524e-01, 1.2224244299030987e-01, 1.1945576353578451e-01,
      1.1485825914571146e-01, 1.0851962447426344e-01, 1.0053594906705049e-01,
      9.1028261982963377e-02, 8.0140700335000981e-02, 6.8038333812357008e-02,
      5.4904695975835437e-02, 4.0939156701306503e-02, 2.6354986615031908e-02,
      1.1393798501027593e-02};
  static constexpr double GaussQuadPts26[] = {
      -9.9588570114561692e-01, -9.7838544595647092e-01, -9.4715906666171423e-01,
      -9.0263786198430707e-01, -8.4544594278849805e-01, -7.7638594882067880e-01,
      -6.9642726041995728e-01, -6.0669229301761807e-01, -5.0844071482450570e-01,
      -4.0305175512348629e-01, -2.9200483948595690e-01, -1.7685882035689018e-01,
      -5.9230093429313208e-02, 5.9230093429313208e-02,  1.7685882035689018e-01,
      2.9200483948595690e-01,  4.0305175512348629e-01,  5.0844071482450570e-01,
      6.0669229301761807e-01,  6.9642726041995728e-01,  7.7638594882067880e-01,
      8.4544594278849805e-01,  9.0263786198430707e-01,  9.4715906666171423e-01,
      9.7838544595647092e-01,  9.9588570114561692e-01};
  static constexpr double GaussQuadWts26[] = {
      1.0551372617343395e-02, 2.4417851092631938e-02, 3.7962383294363120e-02,
      5.0975825297148079e-02, 6.3274046329574674e-02, 7.4684149765659763e-02,
      8.5045894313485068e-02, 9.4213800355914160e-02, 1.0205916109442532e-01,
      1.0847184052857647e-01, 1.1336181654631956e-01, 1.1666044348529646e-01,
      1.1832141527926213e-01, 1.1832141527926213e-01, 1.1666044348529646e-01,
      1.1336181654631956e-01, 1.0847184052857647e-01, 1.0205916109442532e-01,
      9.4213800355914160e-02, 8.5045894313485068e-02, 7.4684149765659763e-02,
      6.3274046329574674e-02, 5.0975825297148079e-02, 3.7962383294363120e-02,
      2.4417851092631938e-02, 1.0551372617343395e-02};
  static constexpr double GaussQuadPts27[] = {
      -9.9617926288898850e-01, -9.7992347596150120e-01, -9.5090055781470506e-01,
      -9.0948232067749113e-01, -8.5620790801829449e-01, -7.9177163907050829e-01,
      -7.1701347373942370e-01, -6.3290797194649517e-01, -5.4055156457945697e-01,
      -4.4114825175002687e-01, -3.3599390363850890e-01, -2.2645936543953685e-01,
      -1.1397258560952997e-01, 0.0000000000000000e+00,  1.1397258560952997e-01,
      2.2645936543953685e-01,  3.3599390363850890e-01,  4.4114825175002687e-01,
      5.4055156457945697e-01,  6.3290797194649517e-01,  7.1701347373942370e-01,
      7.9177163907050829e-01,  8.5620790801829449e-01,  9.0948232067749113e-01,
      9.5090055781470506e-01,  9.7992347596150120e-01,  9.9617926288898850e-01};
  static constexpr double GaussQuadWts27[] = {
      9.7989960512942040e-03, 2.2686231596180995e-02, 3.5297053757419178e-02,
      4.7449412520615374e-02, 5.8983536859833638e-02, 6.9748823766245638e-02,
      7.9604867773057822e-02, 8.8423158543756833e-02, 9.6088727370028507e-02,
      1.0250163781774586e-01, 1.0757828578853317e-01, 1.1125248835684516e-01,
      1.1347634610896520e-01, 1.1422086737895706e-01, 1.1347634610896520e-01,
      1.1125248835684516e-01, 1.0757828578853317e-01, 1.0250163781774586e-01,
      9.6088727370028507e-02, 8.8423158543756833e-02, 7.9604867773057822e-02,
      6.9748823766245638e-02, 5.8983536859833638e-02, 4.7449412520615374e-02,
      3.5297053757419178e-02, 2.2686231596180995e-02, 9.7989960512942040e-03};
  static constexpr double GaussQuadPts28[] = {
      -9.9644249757395442e-01, -9.8130316537087281e-01, -9.5425928062893817e-01,
      -9.1563302639213207e-01, -8.6589252257439497e-01, -8.0564137091717913e-01,
      -7.3561087801363179e-01, -6.5665109403886501e-01, -5.6972047181140173e-01,
      -4.7587422495511827e-01, -3.7625151608907870e-01, -2.7206162763517810e-01,
      -1.6456928213338079e-01, -5.5079289884034266e-02, 5.5079289884034266e-02,
      1.6456928213338079e-01,  2.7206162763517810e-01,  3.7625151608907870e-01,
      4.7587422495511827e-01,  5.6972047181140173e-01,  6.5665109403886501e-01,
      7.3561087801363179e-01,  8.0564137091717913e-01,  8.6589252257439497e-01,
      9.1563302639213207e-01,  9.5425928062893817e-01,  9.8130316537087281e-01,
      9.9644249757395442e-01};
  static constexpr double GaussQuadWts28[] = {
      9.1242825930943974e-03, 2.1132112592771271e-02, 3.2901427782304517e-02,
      4.4272934759003985e-02, 5.5107345675716936e-02, 6.5272923966999755e-02,
      7.4646214234568811e-02, 8.3113417228900935e-02, 9.0571744393032852e-02,
      9.6930657997929923e-02, 1.0211296757806078e-01, 1.0605576592284637e-01,
      1.0871119225829413e-01, 1.1004701301647524e-01, 1.1004701301647524e-01,
      1.0871119225829413e-01, 1.0605576592284637e-01, 1.0211296757806078e-01,
      9.6930657997929923e-02, 9.0571744393032852e-02, 8.3113417228900935e-02,
      7.4646214234568811e-02, 6.5272923966999755e-02, 5.5107345675716936e-02,
      4.4272934759003985e-02, 3.2901427782304517e-02, 2.1132112592771271e-02,
      9.1242825930943974e-03};
  static constexpr double GaussQuadPts29[] = {
      -9.9667944226059657e-01, -9.8254550526141315e-01, -9.5728559577808769e-01,
      -9.2118023295305873e-01, -8.7463780492010279e-01, -8.1818548761525245e-01,
      -7.5246285173447713e-01, -6.7821453760268646e-01, -5.9628179713822782e-01,
      -5.0759295512422764e-01, -4.1315288817400864e-01, -3.1403163786763993e-01,
      -2.1135228616600107e-01, -1.0627823013267923e-01, 0.0000000000000000e+00,
      1.0627823013267923e-01,  2.1135228616600107e-01,  3.1403163786763993e-01,
      4.1315288817400864e-01,  5.0759295512422764e-01,  5.9628179713822782e-01,
      6.7821453760268646e-01,  7.5246285173447713e-01,  8.1818548761525245e-01,
      8.7463780492010279e-01,  9.2118023295305873e-01,  9.5728559577808769e-01,
      9.8254550526141315e-01,  9.9667944226059657e-01};
  static constexpr double GaussQuadWts29[] = {
      8.5169038787472374e-03, 1.9732085056123293e-02, 3.0740492202093361e-02,
      4.1402062518682739e-02, 5.1594826902497753e-02, 6.1203090657079018e-02,
      7.0117933255051140e-02, 7.8238327135763688e-02, 8.5472257366172394e-02,
      9.1737757139258705e-02, 9.6963834094408480e-02, 1.0109127375991488e-01,
      1.0407331007772933e-01, 1.0587615509732079e-01, 1.0647938171831416e-01,
      1.0587615509732079e-01, 1.0407331007772933e-01, 1.0109127375991488e-01,
      9.6963834094408480e-02, 9.1737757139258705e-02, 8.5472257366172394e-02,
      7.8238327135763688e-02, 7.0117933255051140e-02, 6.1203090657079018e-02,
      5.1594826902497753e-02, 4.1402062518682739e-02, 3.0740492202093361e-02,
      1.9732085056123293e-02, 8.5169038787472374e-03};
  static constexpr double GaussQuadPts30[] = {
      -9.9689348407464951e-01, -9.8366812327974729e-01, -9.6002186496830755e-01,
      -9.2620004742927431e-01, -8.8256053579205263e-01, -8.2956576238276836e-01,
      -7.6777743210482619e-01, -6.9785049479331585e-01, -6.2052618298924289e-01,
      -5.3662414814201986e-01, -4.4703376953808915e-01, -3.5270472553087812e-01,
      -2.5463692616788985e-01, -1.5386991360858354e-01, -5.1471842555317698e-02,
      5.1471842555317698e-02,  1.5386991360858354e-01,  2.5463692616788985e-01,
      3.5270472553087812e-01,  4.4703376953808915e-01,  5.3662414814201986e-01,
      6.2052618298924289e-01,  6.9785049479331585e-01,  7.6777743210482619e-01,
      8.2956576238276836e-01,  8.8256053579205263e-01,  9.2620004742927431e-01,
      9.6002186496830755e-01,  9.8366812327974729e-01,  9.9689348407464951e-01};
  static constexpr double GaussQuadWts30[] = {
      7.9681924961695228e-03, 1.8466468311091087e-02, 2.8784707883322873e-02,
      3.8799192569626793e-02, 4.8402672830594434e-02, 5.7493156217619093e-02,
      6.5974229882180324e-02, 7.3755974737704802e-02, 8.0755895229419811e-02,
      8.6899787201082698e-02, 9.2122522237785789e-02, 9.6368737174643990e-02,
      9.9593420586794934e-02, 1.0176238974840521e-01, 1.0285265289355848e-01,
      1.0285265289355848e-01, 1.0176238974840521e-01, 9.9593420586794934e-02,
      9.6368737174643990e-02, 9.2122522237785789e-02, 8.6899787201082698e-02,
      8.0755895229419811e-02, 7.3755974737704802e-02, 6.5974229882180324e-02,
      5.7493156217619093e-02, 4.8402672830594434e-02, 3.8799192569626793e-02,
      2.8784707883322873e-02, 1.8466468311091087e-02, 7.9681924961695228e-03};
  static constexpr double GaussQuadPts31[] = {
      -9.9708748181947704e-01, -9.8468590966515246e-01, -9.6250392509294969e-01,
      -9.3075699789664812e-01, -8.8976002994827108e-01, -8.3992032014626739e-01,
      -7.8173314841662489e-01, -7.1577678458685334e-01, -6.4270672292426034e-01,
      -5.6324916140714931e-01, -4.7819378204490248e-01, -3.8838590160823294e-01,
      -2.9471806998170164e-01, -1.9812119933557062e-01, -9.9555312152341521e-02,
      0.0000000000000000e+00,  9.9555312152341521e-02,  1.9812119933557062e-01,
      2.9471806998170164e-01,  3.8838590160823294e-01,  4.7819378204490248e-01,
      5.6324916140714931e-01,  6.4270672292426034e-01,  7.1577678458685334e-01,
      7.8173314841662489e-01,  8.3992032014626739e-01,  8.8976002994827108e-01,
      9.3075699789664812e-01,  9.6250392509294969e-01,  9.8468590966515246e-01,
      9.9708748181947704e-01};
  static constexpr double GaussQuadWts31[] = {
      7.4708315792505050e-03, 1.7318620790311306e-02, 2.7009019184978618e-02,
      3.6432273912385876e-02, 4.5493707527200826e-02, 5.4103082424916557e-02,
      6.2174786561028587e-02, 6.9628583235410088e-02, 7.6390386598776491e-02,
      8.2392991761589054e-02, 8.7576740608477657e-02, 9.1890113893641351e-02,
      9.5290242912319384e-02, 9.7743335386328484e-02, 9.9225011226672044e-02,
      9.9720544793426305e-02, 9.9225011226672044e-02, 9.7743335386328484e-02,
      9.5290242912319384e-02, 9.1890113893641351e-02, 8.7576740608477657e-02,
      8.2392991761589054e-02, 7.6390386598776491e-02, 6.9628583235410088e-02,
      6.2174786561028587e-02, 5.4103082424916557e-02, 4.5493707527200826e-02,
      3.6432273912385876e-02, 2.7009019184978618e-02, 1.7318620790311306e-02,
      7.4708315792505050e-03};
  static constexpr double GaussQuadPts32[] = {
      -9.9726386184948157e-01, -9.8561151154526838e-01, -9.6476225558750639e-01,
      -9.3490607593773967e-01, -8.9632115576605220e-01, -8.4936761373256997e-01,
      -7.9448379596794239e-01, -7.3218211874028971e-01, -6.6304426693021523e-01,
      -5.8771575724076230e-01, -5.0689990893222936e-01, -4.2135127613063533e-01,
      -3.3186860228212767e-01, -2.3928736225213706e-01, -1.4447196158279649e-01,
      -4.8307665687738310e-02, 4.8307665687738310e-02,  1.4447196158279649e-01,
      2.3928736225213706e-01,  3.3186860228212767e-01,  4.2135127613063533e-01,
      5.0689990893222936e-01,  5.8771575724076230e-01,  6.6304426693021523e-01,
      7.3218211874028971e-01,  7.9448379596794239e-01,  8.4936761373256997e-01,
      8.9632115576605220e-01,  9.3490607593773967e-01,  9.6476225558750639e-01,
      9.8561151154526838e-01,  9.9726386184948157e-01};
  static constexpr double GaussQuadWts32[] = {
      7.0186100094692984e-03, 1.6274394730905965e-02, 2.5392065309262427e-02,
      3.4273862913021626e-02, 4.2835898022226426e-02, 5.0998059262376244e-02,
      5.8684093478535704e-02, 6.5822222776361752e-02, 7.2345794108848449e-02,
      7.8193895787070311e-02, 8.3311924226946846e-02, 8.7652093004403908e-02,
      9.1173878695763863e-02, 9.3844399080804566e-02, 9.5638720079274833e-02,
      9.6540088514727812e-02, 9.6540088514727812e-02, 9.5638720079274833e-02,
      9.3844399080804566e-02, 9.1173878695763863e-02, 8.7652093004403908e-02,
      8.3311924226946846e-02, 7.8193895787070311e-02, 7.2345794108848449e-02,
      6.5822222776361752e-02, 5.8684093478535704e-02, 5.0998059262376244e-02,
      4.2835898022226426e-02, 3.4273862913021626e-02, 2.5392065309262427e-02,
      1.6274394730905965e-02, 7.0186100094692984e-03};
};

template <index_t order>
constexpr const double* get_gauss_quadrature_wts() {
  if constexpr (order == 1) {
    return GaussQuadData::GaussQuadWts1;
  } else if constexpr (order == 2) {
    return GaussQuadData::GaussQuadWts2;
  } else if constexpr (order == 3) {
    return GaussQuadData::GaussQuadWts3;
  } else if constexpr (order == 4) {
    return GaussQuadData::GaussQuadWts4;
  } else if constexpr (order == 5) {
    return GaussQuadData::GaussQuadWts5;
  } else if constexpr (order == 6) {
    return GaussQuadData::GaussQuadWts6;
  } else if constexpr (order == 7) {
    return GaussQuadData::GaussQuadWts7;
  } else if constexpr (order == 8) {
    return GaussQuadData::GaussQuadWts8;
  } else if constexpr (order == 9) {
    return GaussQuadData::GaussQuadWts9;
  } else if constexpr (order == 10) {
    return GaussQuadData::GaussQuadWts10;
  } else if constexpr (order == 11) {
    return GaussQuadData::GaussQuadWts11;
  } else if constexpr (order == 12) {
    return GaussQuadData::GaussQuadWts12;
  } else if constexpr (order == 13) {
    return GaussQuadData::GaussQuadWts13;
  } else if constexpr (order == 14) {
    return GaussQuadData::GaussQuadWts14;
  } else if constexpr (order == 15) {
    return GaussQuadData::GaussQuadWts15;
  } else if constexpr (order == 16) {
    return GaussQuadData::GaussQuadWts16;
  } else if constexpr (order == 17) {
    return GaussQuadData::GaussQuadWts17;
  } else if constexpr (order == 18) {
    return GaussQuadData::GaussQuadWts18;
  } else if constexpr (order == 19) {
    return GaussQuadData::GaussQuadWts19;
  } else if constexpr (order == 20) {
    return GaussQuadData::GaussQuadWts20;
  } else if constexpr (order == 21) {
    return GaussQuadData::GaussQuadWts21;
  } else if constexpr (order == 22) {
    return GaussQuadData::GaussQuadWts22;
  } else if constexpr (order == 23) {
    return GaussQuadData::GaussQuadWts23;
  } else if constexpr (order == 24) {
    return GaussQuadData::GaussQuadWts24;
  } else if constexpr (order == 25) {
    return GaussQuadData::GaussQuadWts25;
  } else if constexpr (order == 26) {
    return GaussQuadData::GaussQuadWts26;
  } else if constexpr (order == 27) {
    return GaussQuadData::GaussQuadWts27;
  } else if constexpr (order == 28) {
    return GaussQuadData::GaussQuadWts28;
  } else if constexpr (order == 29) {
    return GaussQuadData::GaussQuadWts29;
  } else if constexpr (order == 30) {
    return GaussQuadData::GaussQuadWts30;
  } else if constexpr (order == 31) {
    return GaussQuadData::GaussQuadWts31;
  } else if constexpr (order == 32) {
    return GaussQuadData::GaussQuadWts32;
  }
  return NULL;
}

template <index_t order>
constexpr const double* get_gauss_quadrature_pts() {
  if constexpr (order == 1) {
    return GaussQuadData::GaussQuadPts1;
  } else if constexpr (order == 2) {
    return GaussQuadData::GaussQuadPts2;
  } else if constexpr (order == 3) {
    return GaussQuadData::GaussQuadPts3;
  } else if constexpr (order == 4) {
    return GaussQuadData::GaussQuadPts4;
  } else if constexpr (order == 5) {
    return GaussQuadData::GaussQuadPts5;
  } else if constexpr (order == 6) {
    return GaussQuadData::GaussQuadPts6;
  } else if constexpr (order == 7) {
    return GaussQuadData::GaussQuadPts7;
  } else if constexpr (order == 8) {
    return GaussQuadData::GaussQuadPts8;
  } else if constexpr (order == 9) {
    return GaussQuadData::GaussQuadPts9;
  } else if constexpr (order == 10) {
    return GaussQuadData::GaussQuadPts10;
  } else if constexpr (order == 11) {
    return GaussQuadData::GaussQuadPts11;
  } else if constexpr (order == 12) {
    return GaussQuadData::GaussQuadPts12;
  } else if constexpr (order == 13) {
    return GaussQuadData::GaussQuadPts13;
  } else if constexpr (order == 14) {
    return GaussQuadData::GaussQuadPts14;
  } else if constexpr (order == 15) {
    return GaussQuadData::GaussQuadPts15;
  } else if constexpr (order == 16) {
    return GaussQuadData::GaussQuadPts16;
  } else if constexpr (order == 17) {
    return GaussQuadData::GaussQuadPts17;
  } else if constexpr (order == 18) {
    return GaussQuadData::GaussQuadPts18;
  } else if constexpr (order == 19) {
    return GaussQuadData::GaussQuadPts19;
  } else if constexpr (order == 20) {
    return GaussQuadData::GaussQuadPts20;
  } else if constexpr (order == 21) {
    return GaussQuadData::GaussQuadPts21;
  } else if constexpr (order == 22) {
    return GaussQuadData::GaussQuadPts22;
  } else if constexpr (order == 23) {
    return GaussQuadData::GaussQuadPts23;
  } else if constexpr (order == 24) {
    return GaussQuadData::GaussQuadPts24;
  } else if constexpr (order == 25) {
    return GaussQuadData::GaussQuadPts25;
  } else if constexpr (order == 26) {
    return GaussQuadData::GaussQuadPts26;
  } else if constexpr (order == 27) {
    return GaussQuadData::GaussQuadPts27;
  } else if constexpr (order == 28) {
    return GaussQuadData::GaussQuadPts28;
  } else if constexpr (order == 29) {
    return GaussQuadData::GaussQuadPts29;
  } else if constexpr (order == 30) {
    return GaussQuadData::GaussQuadPts30;
  } else if constexpr (order == 31) {
    return GaussQuadData::GaussQuadPts31;
  } else if constexpr (order == 32) {
    return GaussQuadData::GaussQuadPts32;
  }
  return NULL;
}

struct GaussLobattoQuadData {
  static constexpr double GaussLobattoQuadPts2[] = {-1.0000000000000000e+00,
                                                    1.0000000000000000e+00};
  static constexpr double GaussLobattoQuadWts2[] = {9.9999999999999978e-01,
                                                    9.9999999999999978e-01};
  static constexpr double GaussLobattoQuadPts3[] = {
      -1.0000000000000000e+00, 0.0000000000000000e+00, 1.0000000000000000e+00};
  static constexpr double GaussLobattoQuadWts3[] = {
      3.3333333333333476e-01, 1.3333333333333315e+00, 3.3333333333333354e-01};
  static constexpr double GaussLobattoQuadPts4[] = {
      -1.0000000000000000e+00, -4.4721359549995721e-01, 4.4721359549995876e-01,
      1.0000000000000000e+00};
  static constexpr double GaussLobattoQuadWts4[] = {
      1.6666666666666685e-01, 8.3333333333333326e-01, 8.3333333333333304e-01,
      1.6666666666666632e-01};
  static constexpr double GaussLobattoQuadPts5[] = {
      -1.0000000000000000e+00, -6.5465367070797553e-01, 0.0000000000000000e+00,
      6.5465367070797753e-01, 1.0000000000000000e+00};
  static constexpr double GaussLobattoQuadWts5[] = {
      9.9999999999999201e-02, 5.4444444444444640e-01, 7.1111111111111092e-01,
      5.4444444444444362e-01, 9.9999999999999645e-02};
  static constexpr double GaussLobattoQuadPts6[] = {
      -1.0000000000000000e+00, -7.6505532392946396e-01, -2.8523151648064515e-01,
      2.8523151648064560e-01,  7.6505532392946463e-01,  1.0000000000000000e+00};
  static constexpr double GaussLobattoQuadWts6[] = {
      6.6666666666664834e-02, 3.7847495629785000e-01, 5.5485837703548546e-01,
      5.5485837703548546e-01, 3.7847495629784766e-01, 6.6666666666666513e-02};
  static constexpr double GaussLobattoQuadPts7[] = {
      -1.0000000000000000e+00, -8.3022389627856374e-01, -4.6884879347071329e-01,
      0.0000000000000000e+00,  4.6884879347071506e-01,  8.3022389627856708e-01,
      1.0000000000000000e+00};
  static constexpr double GaussLobattoQuadWts7[] = {
      4.7619047619048185e-02, 2.7682604736156657e-01, 4.3174538120986239e-01,
      4.8761904761904779e-01, 4.3174538120986206e-01, 2.7682604736156524e-01,
      4.7619047619047429e-02};
  static constexpr double GaussLobattoQuadPts8[] = {
      -1.0000000000000000e+00, -8.7174014850960591e-01, -5.9170018143314174e-01,
      -2.0929921790247863e-01, 2.0929921790247963e-01,  5.9170018143314229e-01,
      8.7174014850960679e-01,  1.0000000000000000e+00};
  static constexpr double GaussLobattoQuadWts8[] = {
      3.5714285714285317e-02, 2.1070422714350415e-01, 3.4112269248350741e-01,
      4.1245879465870305e-01, 4.1245879465870405e-01, 3.4112269248350424e-01,
      2.1070422714350601e-01, 3.5714285714285525e-02};
  static constexpr double GaussLobattoQuadPts9[] = {
      -1.0000000000000000e+00, -8.9975799541145873e-01, -6.7718627951073618e-01,
      -3.6311746382617738e-01, 0.0000000000000000e+00,  3.6311746382617860e-01,
      6.7718627951073829e-01,  8.9975799541146007e-01,  1.0000000000000000e+00};
  static constexpr double GaussLobattoQuadWts9[] = {
      2.7777777777777641e-02, 1.6549536156080630e-01, 2.7453871250016115e-01,
      3.4642851097304650e-01, 3.7151927437641818e-01, 3.4642851097304522e-01,
      2.7453871250016160e-01, 1.6549536156080599e-01, 2.7777777777777665e-02};
  static constexpr double GaussLobattoQuadPts10[] = {
      -1.0000000000000000e+00, -9.1953390816645775e-01, -7.3877386510550425e-01,
      -4.7792494981044387e-01, -1.6527895766638712e-01, 1.6527895766638823e-01,
      4.7792494981044487e-01,  7.3877386510550513e-01,  9.1953390816645864e-01,
      1.0000000000000000e+00};
  static constexpr double GaussLobattoQuadWts10[] = {
      2.2222222222220846e-02, 1.3330599085107145e-01, 2.2488934206312919e-01,
      2.9204268367968239e-01, 3.2753976118389466e-01, 3.2753976118389705e-01,
      2.9204268367968306e-01, 2.2488934206312794e-01, 1.3330599085107017e-01,
      2.2222222222222133e-02};
  static constexpr double GaussLobattoQuadPts11[] = {
      -1.0000000000000000e+00, -9.3400143040805816e-01, -7.8448347366314364e-01,
      -5.6523532699620560e-01, -2.9575813558693809e-01, 0.0000000000000000e+00,
      2.9575813558693964e-01,  5.6523532699620493e-01,  7.8448347366314430e-01,
      9.3400143040805905e-01,  1.0000000000000000e+00};
  static constexpr double GaussLobattoQuadWts11[] = {
      1.8181818181816082e-02, 1.0961227326699295e-01, 1.8716988178030769e-01,
      2.4804810426403048e-01, 2.8687912477900768e-01, 3.0021759545569171e-01,
      2.8687912477900690e-01, 2.4804810426402921e-01, 1.8716988178030525e-01,
      1.0961227326699403e-01, 1.8181818181818146e-02};
  static constexpr double GaussLobattoQuadPts12[] = {
      -1.0000000000000000e+00, -9.4489927222288173e-01, -8.1927932164400619e-01,
      -6.3287615303185984e-01, -3.9953094096534936e-01, -1.3655293285492798e-01,
      1.3655293285492809e-01,  3.9953094096534914e-01,  6.3287615303186096e-01,
      8.1927932164400663e-01,  9.4489927222288217e-01,  1.0000000000000000e+00};
  static constexpr double GaussLobattoQuadWts12[] = {
      1.5151515151513811e-02, 9.1684517413193958e-02, 1.5797470556437102e-01,
      2.1250841776102344e-01, 2.5127560319920300e-01, 2.7140524091069435e-01,
      2.7140524091069618e-01, 2.5127560319920217e-01, 2.1250841776102075e-01,
      1.5797470556436988e-01, 9.1684517413195554e-02, 1.5151515151515154e-02};
  static constexpr double GaussLobattoQuadPts13[] = {
      -1.0000000000000000e+00, -9.5330984664216345e-01, -8.4634756465187144e-01,
      -6.8618846908175768e-01, -4.8290982109133562e-01, -2.4928693010623904e-01,
      0.0000000000000000e+00,  2.4928693010623970e-01,  4.8290982109133618e-01,
      6.8618846908175735e-01,  8.4634756465187233e-01,  9.5330984664216400e-01,
      1.0000000000000000e+00};
  static constexpr double GaussLobattoQuadWts13[] = {
      1.2820512820512638e-02, 7.7801686746816937e-02, 1.3498192668960848e-01,
      1.8364686520355220e-01, 2.2076779356610979e-01, 2.4401579030667844e-01,
      2.5193084933344745e-01, 2.4401579030667550e-01, 2.2076779356610884e-01,
      1.8364686520355059e-01, 1.3498192668960832e-01, 7.7801686746818574e-02,
      1.2820512820512900e-02};
  static constexpr double GaussLobattoQuadPts14[] = {
      -1.0000000000000000e+00, -9.5993504526725970e-01, -8.6780105383034667e-01,
      -7.2886859909132529e-01, -5.5063940292864788e-01, -3.4272401334271363e-01,
      -1.1633186888370339e-01, 1.1633186888370439e-01,  3.4272401334271341e-01,
      5.5063940292864744e-01,  7.2886859909132640e-01,  8.6780105383034734e-01,
      9.5993504526726103e-01,  1.0000000000000000e+00};
  static constexpr double GaussLobattoQuadWts14[] = {
      1.0989010989011548e-02, 6.6837284497679977e-02, 1.1658665589871241e-01,
      1.6002185176295380e-01, 1.9482614937341677e-01, 2.1912625300976965e-01,
      2.3161279446845551e-01, 2.3161279446845567e-01, 2.1912625300977090e-01,
      1.9482614937341733e-01, 1.6002185176295219e-01, 1.1658665589871195e-01,
      6.6837284497681199e-02, 1.0989010989011104e-02};
  static constexpr double GaussLobattoQuadPts15[] = {
      -1.0000000000000000e+00, -9.6524592650383734e-01, -8.8508204422297498e-01,
      -7.6351968995181463e-01, -6.0625320546984462e-01, -4.2063805471367233e-01,
      -2.1535395536379376e-01, 0.0000000000000000e+00,  2.1535395536379431e-01,
      4.2063805471367288e-01,  6.0625320546984607e-01,  7.6351968995181541e-01,
      8.8508204422297643e-01,  9.6524592650383878e-01,  1.0000000000000000e+00};
  static constexpr double GaussLobattoQuadWts15[] = {
      9.5238095238110061e-03, 5.8029893028599074e-02, 1.0166007032571688e-01,
      1.4051169980242767e-01, 1.7278964725360296e-01, 1.9698723596461373e-01,
      2.1197358592682206e-01, 2.1704811634881510e-01, 2.1197358592682133e-01,
      1.9698723596461340e-01, 1.7278964725359991e-01, 1.4051169980242820e-01,
      1.0166007032571787e-01, 5.8029893028601134e-02, 9.5238095238095542e-03};
  static constexpr double GaussLobattoQuadPts16[] = {
      -1.0000000000000000e+00, -9.6956804627021809e-01, -8.9920053309347159e-01,
      -7.9200829186181543e-01, -6.5238870288249329e-01, -4.8605942188713702e-01,
      -2.9983046890076293e-01, -1.0132627352194912e-01, 1.0132627352195001e-01,
      2.9983046890076404e-01,  4.8605942188713747e-01,  6.5238870288249351e-01,
      7.9200829186181509e-01,  8.9920053309347214e-01,  9.6956804627021809e-01,
      1.0000000000000000e+00};
  static constexpr double GaussLobattoQuadWts16[] = {
      8.3333333333342127e-03, 5.0850361005919130e-02, 8.9393697325929680e-02,
      1.2425538213251645e-01, 1.5402698080716465e-01, 1.7749191339170423e-01,
      1.9369002382520223e-01, 2.0195830817823007e-01, 2.0195830817822910e-01,
      1.9369002382520348e-01, 1.7749191339170323e-01, 1.5402698080716520e-01,
      1.2425538213251465e-01, 8.9393697325930874e-02, 5.0850361005920171e-02,
      8.3333333333333818e-03};
  static constexpr double GaussLobattoQuadPts17[] = {
      -1.0000000000000000e+00, -9.7313217663141804e-01, -9.1087999591557245e-01,
      -8.1569625122176892e-01, -6.9102898062768325e-01, -5.4138539933010166e-01,
      -3.7217443356547619e-01, -1.8951197351831661e-01, 0.0000000000000000e+00,
      1.8951197351831772e-01,  3.7217443356547719e-01,  5.4138539933010188e-01,
      6.9102898062768459e-01,  8.1569625122177036e-01,  9.1087999591557367e-01,
      9.7313217663141838e-01,  1.0000000000000000e+00};
  static constexpr double GaussLobattoQuadWts17[] = {
      7.3529411764716047e-03, 4.4921940543254019e-02, 7.9198270503685872e-02,
      1.1059290900702957e-01, 1.3798774620192938e-01, 1.6039466199761998e-01,
      1.7700425351565824e-01, 1.8721633967761886e-01, 1.9066187475346749e-01,
      1.8721633967761939e-01, 1.7700425351565705e-01, 1.6039466199762226e-01,
      1.3798774620192711e-01, 1.1059290900702813e-01, 7.9198270503687065e-02,
      4.4921940543254470e-02, 7.3529411764706315e-03};
  static constexpr double GaussLobattoQuadPts18[] = {
      -1.0000000000000000e+00, -9.7610555741219884e-01, -9.2064918534753404e-01,
      -8.3559353521809010e-01, -7.2367932928324241e-01, -5.8850483431866252e-01,
      -4.3441503691212469e-01, -2.6636265287828076e-01, -8.9749093484651876e-02,
      8.9749093484652209e-02,  2.6636265287828109e-01,  4.3441503691212446e-01,
      5.8850483431866185e-01,  7.2367932928324286e-01,  8.3559353521809054e-01,
      9.2064918534753404e-01,  9.7610555741219862e-01,  1.0000000000000000e+00};
  static constexpr double GaussLobattoQuadWts18[] = {
      6.5359477124179791e-03, 3.9970628810914614e-02, 7.0637166885631819e-02,
      9.9016271717502102e-02, 1.2421053313296705e-01, 1.4541196157380484e-01,
      1.6193951723760203e-01, 1.7326210948945586e-01, 1.7901586343970385e-01,
      1.7901586343970266e-01, 1.7326210948945525e-01, 1.6193951723760316e-01,
      1.4541196157380210e-01, 1.2421053313296658e-01, 9.9016271717502921e-02,
      7.0637166885633693e-02, 3.9970628810914365e-02, 6.5359477124182930e-03};
  static constexpr double GaussLobattoQuadPts19[] = {
      -1.0000000000000000e+00, -9.7861176622207990e-01, -9.2890152815258609e-01,
      -8.5246057779664564e-01, -7.5149420255261234e-01, -6.2890813726521988e-01,
      -4.8822928568071267e-01, -3.3350484782449863e-01, -1.6918602340928146e-01,
      0.0000000000000000e+00,  1.6918602340928179e-01,  3.3350484782449896e-01,
      4.8822928568071378e-01,  6.2890813726522121e-01,  7.5149420255261323e-01,
      8.5246057779664608e-01,  9.2890152815258642e-01,  9.7861176622208013e-01,
      1.0000000000000000e+00};
  static constexpr double GaussLobattoQuadWts19[] = {
      5.8479532163739686e-03, 3.5793365186177921e-02, 6.3381891762628789e-02,
      8.9131757099208050e-02, 1.1231534147730403e-01, 1.3226728044875072e-01,
      1.4841394259593946e-01, 1.6029092404406159e-01, 1.6755658452714225e-01,
      1.7000191928482550e-01, 1.6755658452714309e-01, 1.6029092404406214e-01,
      1.4841394259593788e-01, 1.3226728044875039e-01, 1.1231534147730518e-01,
      8.9131757099207620e-02, 6.3381891762629983e-02, 3.5793365186176700e-02,
      5.8479532163742366e-03};
  static constexpr double GaussLobattoQuadPts20[] = {
      -1.0000000000000000e+00, -9.8074370489391427e-01, -9.3593449881266544e-01,
      -8.6687797808994915e-01, -7.7536826095205602e-01, -6.6377640229031143e-01,
      -5.3499286403188617e-01, -3.9235318371390848e-01, -2.3955170592298636e-01,
      -8.0545937238821530e-02, 8.0545937238822418e-02,  2.3955170592298691e-01,
      3.9235318371390970e-01,  5.3499286403188662e-01,  6.6377640229031121e-01,
      7.7536826095205602e-01,  8.6687797808995015e-01,  9.3593449881266555e-01,
      9.8074370489391416e-01,  1.0000000000000000e+00};
  static constexpr double GaussLobattoQuadWts20[] = {
      5.2631578947361420e-03, 3.2237123188489668e-02, 5.7181802127566676e-02,
      8.0631763996120376e-02, 1.0199149969945154e-01, 1.2070922762867640e-01,
      1.3630048235872197e-01, 1.4836155407091550e-01, 1.5658010264747499e-01,
      1.6074328638784591e-01, 1.6074328638784555e-01, 1.5658010264747457e-01,
      1.4836155407091509e-01, 1.3630048235872405e-01, 1.2070922762867584e-01,
      1.0199149969945150e-01, 8.0631763996119710e-02, 5.7181802127567183e-02,
      3.2237123188488988e-02, 5.2631578947368281e-03};
  static constexpr double GaussLobattoQuadPts21[] = {
      -1.0000000000000000e+00, -9.8257229660454715e-01, -9.4197629695974472e-01,
      -8.7929475532358858e-01, -7.9600192607771181e-01, -6.9405102606222191e-01,
      -5.7583196026183114e-01, -4.4411578327900214e-01, -3.0198985650876464e-01,
      -1.5278551580218513e-01, 0.0000000000000000e+00,  1.5278551580218580e-01,
      3.0198985650876564e-01,  4.4411578327900247e-01,  5.7583196026183114e-01,
      6.9405102606222346e-01,  7.9600192607771247e-01,  8.7929475532359058e-01,
      9.4197629695974550e-01,  9.8257229660454803e-01,  1.0000000000000000e+00};
  static constexpr double GaussLobattoQuadWts21[] = {
      4.7619047619041985e-03, 2.9184840098505617e-02, 5.1843169000850356e-02,
      7.3273918185072576e-02, 9.2985467957888090e-02, 1.1051708321912454e-01,
      1.2545812119087013e-01, 1.3745846286004171e-01, 1.4623686244797598e-01,
      1.5158757511168042e-01, 1.5338519033217307e-01, 1.5158757511168133e-01,
      1.4623686244797707e-01, 1.3745846286004260e-01, 1.2545812119086963e-01,
      1.1051708321912342e-01, 9.2985467957886245e-02, 7.3273918185074047e-02,
      5.1843169000849891e-02, 2.9184840098505398e-02, 4.7619047619047224e-03};
  static constexpr double GaussLobattoQuadPts22[] = {
      -1.0000000000000000e+00, -9.8415243845764611e-01, -9.4720428399922874e-01,
      -8.9006229019090410e-01, -8.1394892761192095e-01, -7.2048723996120234e-01,
      -6.1166943828425846e-01, -4.8981487518990141e-01, -3.5752071013891906e-01,
      -2.1760658515928477e-01, -7.3054540010898394e-02, 7.3054540010898950e-02,
      2.1760658515928533e-01,  3.5752071013891940e-01,  4.8981487518990252e-01,
      6.1166943828425913e-01,  7.2048723996120223e-01,  8.1394892761192117e-01,
      8.9006229019090455e-01,  9.4720428399922862e-01,  9.8415243845764622e-01,
      1.0000000000000000e+00};
  static constexpr double GaussLobattoQuadWts22[] = {
      4.3290043290029707e-03, 2.6545747682501182e-02, 4.7214465293741639e-02,
      6.6865605864550787e-02, 8.5090060391838696e-02, 1.0150057480164758e-01,
      1.1574764465394027e-01, 1.2752769665343039e-01, 1.3658968861374313e-01,
      1.4274049227136137e-01, 1.4584901944424228e-01, 1.4584901944424222e-01,
      1.4274049227136126e-01, 1.3658968861374179e-01, 1.2752769665342945e-01,
      1.1574764465393828e-01, 1.0150057480164774e-01, 8.5090060391838279e-02,
      6.6865605864553049e-02, 4.7214465293740723e-02, 2.6545747682501643e-02,
      4.3290043290042839e-03};
  static constexpr double GaussLobattoQuadPts23[] = {
      -1.0000000000000000e+00, -9.8552715587873330e-01, -9.5175795571070987e-01,
      -8.9945855804034514e-01, -8.2965109665128600e-01, -7.4369504117206020e-01,
      -6.4326364446013717e-01, -5.3031177113684413e-01, -4.0703793791447462e-01,
      -2.7584154894579305e-01, -1.3927620404066854e-01, 0.0000000000000000e+00,
      1.3927620404066854e-01,  2.7584154894579282e-01,  4.0703793791447496e-01,
      5.3031177113684413e-01,  6.4326364446013651e-01,  7.4369504117206087e-01,
      8.2965109665128600e-01,  8.9945855804034502e-01,  9.5175795571071020e-01,
      9.8552715587873263e-01,  1.0000000000000000e+00};
  static constexpr double GaussLobattoQuadWts23[] = {
      3.9525691699590663e-03, 2.4248600771531598e-02, 4.3175871170242977e-02,
      6.1252477129553909e-02, 7.8135449475570912e-02, 9.3497246163513015e-02,
      1.0703910172433719e-01, 1.1849751066274897e-01, 1.2764947470175714e-01,
      1.3431687263860423e-01, 1.3836993638580744e-01, 1.3972978001274658e-01,
      1.3836993638580744e-01, 1.3431687263860320e-01, 1.2764947470175814e-01,
      1.1849751066274911e-01, 1.0703910172433752e-01, 9.3497246163512446e-02,
      7.8135449475570426e-02, 6.1252477129554589e-02, 4.3175871170241721e-02,
      2.4248600771531782e-02, 3.9525691699604472e-03};
  static constexpr double GaussLobattoQuadPts24[] = {
      -1.0000000000000000e+00, -9.8673055350516070e-01, -9.5574822092988554e-01,
      -9.0770567511350575e-01, -8.4346407015487124e-01, -7.6417048242049290e-01,
      -6.7124010526412792e-01, -5.6633135797929568e-01, -4.5131637321432261e-01,
      -3.2824761337551078e-01, -1.9932125339083218e-01, -6.6837993737228762e-02,
      6.6837993737229096e-02,  1.9932125339083295e-01,  3.2824761337551123e-01,
      4.5131637321432272e-01,  5.6633135797929568e-01,  6.7124010526412858e-01,
      7.6417048242049335e-01,  8.4346407015487190e-01,  9.0770567511350642e-01,
      9.5574822092988632e-01,  9.8673055350516092e-01,  1.0000000000000000e+00};
  static constexpr double GaussLobattoQuadWts24[] = {
      3.6231884057960958e-03, 2.2236853464711236e-02, 3.9631681333466749e-02,
      5.6309848724646915e-02, 7.1981862055294971e-02, 8.6369029967928571e-02,
      9.9214827684086862e-02, 1.1029008689296768e-01, 1.1939719370249234e-01,
      1.2637364202801965e-01, 1.3109494187360349e-01, 1.3347684386698580e-01,
      1.3347684386698616e-01, 1.3109494187360327e-01, 1.2637364202802140e-01,
      1.1939719370249172e-01, 1.1029008689296872e-01, 9.9214827684083795e-02,
      8.6369029967929098e-02, 7.1981862055294346e-02, 5.6309848724646276e-02,
      3.9631681333467526e-02, 2.2236853464711159e-02, 3.6231884057970672e-03};
  static constexpr double GaussLobattoQuadPts25[] = {
      -1.0000000000000000e+00, -9.8778994493149352e-01, -9.5926413825253354e-01,
      -9.1498277073462231e-01, -8.5567646583531554e-01, -7.8231965924071689e-01,
      -6.9611704881513359e-01, -5.9848414727999311e-01, -4.9102411481887787e-01,
      -3.7550145785922684e-01, -2.5381306416887672e-01, -1.2795705948310676e-01,
      0.0000000000000000e+00,  1.2795705948310732e-01,  2.5381306416887683e-01,
      3.7550145785922739e-01,  4.9102411481887875e-01,  5.9848414727999311e-01,
      6.9611704881513459e-01,  7.8231965924071689e-01,  8.5567646583531642e-01,
      9.1498277073462253e-01,  9.5926413825253443e-01,  9.8778994493149375e-01,
      1.0000000000000000e+00};
  static constexpr double GaussLobattoQuadWts25[] = {
      3.3333333333324796e-03, 2.0465168932974703e-02, 3.6504738794269499e-02,
      5.1936228368491481e-02, 6.6513728675313494e-02, 7.9998774836293418e-02,
      9.2170139910619800e-02, 1.0282803034796016e-01, 1.1179746626832049e-01,
      1.1893117940681282e-01, 1.2411203893795042e-01, 1.2725497753833184e-01,
      1.2830838929866159e-01, 1.2725497753833190e-01, 1.2411203893795059e-01,
      1.1893117940681133e-01, 1.1179746626832066e-01, 1.0282803034795790e-01,
      9.2170139910620272e-02, 7.9998774836293265e-02, 6.6513728675312925e-02,
      5.1936228368491232e-02, 3.6504738794271088e-02, 2.0465168932974346e-02,
      3.3333333333332850e-03};
  static constexpr double GaussLobattoQuadPts26[] = {
      -1.0000000000000000e+00, -9.8872741231147554e-01, -9.6237787476771652e-01,
      -9.2143554681755702e-01, -8.6652432395912293e-01, -7.9847718310743776e-01,
      -7.1832581636266601e-01, -6.2728529949231726e-01, -5.2673574202987883e-01,
      -4.1820138706624665e-01, -3.0332751285925208e-01, -1.8385549527005440e-01,
      -6.1596411781919880e-02, 6.1596411781919991e-02,  1.8385549527005496e-01,
      3.0332751285925275e-01,  4.1820138706624677e-01,  5.2673574202987838e-01,
      6.2728529949231715e-01,  7.1832581636266513e-01,  7.9847718310743743e-01,
      8.6652432395912360e-01,  9.2143554681755735e-01,  9.6237787476771741e-01,
      9.8872741231147565e-01,  1.0000000000000000e+00};
  static constexpr double GaussLobattoQuadWts26[] = {
      3.0769230769223271e-03, 1.8896858024264447e-02, 3.3732303685953979e-02,
      4.8048399081179700e-02, 6.1635025142547685e-02, 7.4287050122292919e-02,
      8.5812863980005274e-02, 9.6037802353901858e-02, 1.0480688623073788e-01,
      1.1198719411985950e-01, 1.1746988409380880e-01, 1.2117184628844370e-01,
      1.2303696380008267e-01, 1.2303696380008319e-01, 1.2117184628844323e-01,
      1.1746988409380808e-01, 1.1198719411986052e-01, 1.0480688623073750e-01,
      9.6037802353901372e-02, 8.5812863980004955e-02, 7.4287050122291420e-02,
      6.1635025142547331e-02, 4.8048399081180269e-02, 3.3732303685955825e-02,
      1.8896858024263503e-02, 3.0769230769230392e-03};
  static constexpr double GaussLobattoQuadPts27[] = {
      -1.0000000000000000e+00, -9.8956096372854963e-01, -9.6514840245081790e-01,
      -9.2718345872511532e-01, -8.7620208621452145e-01, -8.1292048689581198e-01,
      -7.3822714984645854e-01, -6.5317066369680910e-01, -5.5894506094256036e-01,
      -4.5687307561408219e-01, -3.4838758198902875e-01, -2.3501148310291819e-01,
      -1.1833633389852127e-01, 0.0000000000000000e+00,  1.1833633389852161e-01,
      2.3501148310291875e-01,  3.4838758198902886e-01,  4.5687307561408275e-01,
      5.5894506094256147e-01,  6.5317066369680954e-01,  7.3822714984645987e-01,
      8.1292048689581231e-01,  8.7620208621452256e-01,  9.2718345872511587e-01,
      9.6514840245081901e-01,  9.8956096372855062e-01,  1.0000000000000000e+00};
  static constexpr double GaussLobattoQuadWts27[] = {
      2.8490028490025937e-03, 1.7501974876066667e-02, 3.1262951735200474e-02,
      4.4577657933060115e-02, 5.7265569680161867e-02, 6.9149342360044899e-02,
      8.0062321970539557e-02, 8.9851365259292965e-02, 9.8379074585951215e-02,
      1.0552574782125400e-01, 1.1119106525743752e-01, 1.1529550025465092e-01,
      1.1778143658595626e-01, 1.1861397766276269e-01, 1.1778143658595615e-01,
      1.1529550025465177e-01, 1.1119106525743779e-01, 1.0552574782125301e-01,
      9.8379074585952034e-02, 8.9851365259291618e-02, 8.0062321970538211e-02,
      6.9149342360043123e-02, 5.7265569680162526e-02, 4.4577657933061419e-02,
      3.1262951735202292e-02, 1.7501974876065651e-02, 2.8490028490028105e-03};
  static constexpr double GaussLobattoQuadPts28[] = {
      -1.0000000000000000e+00, -9.9030540261845279e-01, -9.6762428585713045e-01,
      -9.3232516712155822e-01, -8.8487101721130146e-01, -8.2588097005633698e-01,
      -7.5612419400556918e-01, -6.7651012892957252e-01, -5.8807668983717609e-01,
      -4.9197675393157869e-01, -3.8946313757636219e-01, -2.8187226662160203e-01,
      -1.7060675530800395e-01, -5.7117121693513129e-02, 5.7117121693513351e-02,
      1.7060675530800451e-01,  2.8187226662160270e-01,  3.8946313757636342e-01,
      4.9197675393157969e-01,  5.8807668983717576e-01,  6.7651012892957341e-01,
      7.5612419400556996e-01,  8.2588097005633831e-01,  8.8487101721130279e-01,
      9.3232516712155866e-01,  9.6762428585713134e-01,  9.9030540261845412e-01,
      1.0000000000000000e+00};
  static constexpr double GaussLobattoQuadWts28[] = {
      2.6455026455026926e-03, 1.6255883957505129e-02, 2.9054220677977825e-02,
      4.1466915243005872e-02, 5.3338077047326279e-02, 6.4513658080355127e-02,
      7.4848123509707057e-02, 8.4206795121512218e-02, 9.2467685997713447e-02,
      9.9523110412494953e-02, 1.0528109376105547e-01, 1.0966657379597773e-01,
      1.1262238007723938e-01, 1.1410997967262732e-01, 1.1410997967262825e-01,
      1.1262238007723935e-01, 1.0966657379597654e-01, 1.0528109376105509e-01,
      9.9523110412495328e-02, 9.2467685997712795e-02, 8.4206795121509984e-02,
      7.4848123509707501e-02, 6.4513658080354502e-02, 5.3338077047327279e-02,
      4.1466915243006802e-02, 2.9054220677979171e-02, 1.6255883957504248e-02,
      2.6455026455026180e-03};
  static constexpr double GaussLobattoQuadPts29[] = {
      -1.0000000000000000e+00, -9.9097298826856783e-01, -9.6984580728793501e-01,
      -9.3694271852098154e-01, -8.9266571997608679e-01, -8.3755273628178539e-01,
      -7.7227289720646763e-01, -6.9761866135636685e-01, -6.1449625220343185e-01,
      -5.2391467437196870e-01, -4.2697347171349387e-01, -3.2484938284190989e-01,
      -2.1878205828426034e-01, -1.1005901339559165e-01, 0.0000000000000000e+00,
      1.1005901339559288e-01,  2.1878205828426134e-01,  3.2484938284191123e-01,
      4.2697347171349431e-01,  5.2391467437196904e-01,  6.1449625220343318e-01,
      6.9761866135636830e-01,  7.7227289720646886e-01,  8.3755273628178661e-01,
      8.9266571997608835e-01,  9.3694271852098254e-01,  9.6984580728793635e-01,
      9.9097298826856983e-01,  1.0000000000000000e+00};
  static constexpr double GaussLobattoQuadWts29[] = {
      2.4630541871927623e-03, 1.5138169859968336e-02, 2.7070806296824491e-02,
      3.8668439979713462e-02, 4.9795809093235825e-02, 6.0318503828523787e-02,
      7.0108938000598003e-02, 7.9048313027884773e-02, 8.7028133441137315e-02,
      9.3951542114797351e-02, 9.9734501637149850e-02, 1.0430681646367540e-01,
      1.0761298583356753e-01, 1.0961287784589033e-01, 1.1028221677968235e-01,
      1.0961287784589009e-01, 1.0761298583356732e-01, 1.0430681646367657e-01,
      9.9734501637150155e-02, 9.3951542114796963e-02, 8.7028133441134914e-02,
      7.9048313027885522e-02, 7.0108938000598101e-02, 6.0318503828522996e-02,
      4.9795809093237574e-02, 3.8668439979713212e-02, 2.7070806296824963e-02,
      1.5138169859967635e-02, 2.4630541871920766e-03};
  static constexpr double GaussLobattoQuadPts30[] = {
      -1.0000000000000000e+00, -9.9157394284049905e-01, -9.7184660316626892e-01,
      -9.4110478095105643e-01, -8.9969921819927645e-01, -8.4809948718019745e-01,
      -7.8689035723754652e-01, -7.1676539863708499e-01, -6.3851917580755790e-01,
      -5.5303826009505186e-01, -4.6129119016824061e-01, -3.6431750042244881e-01,
      -2.6321594371957358e-01, -1.5913204262584957e-01, -5.3245110485486746e-02,
      5.3245110485487523e-02,  1.5913204262585079e-01,  2.6321594371957402e-01,
      3.6431750042244915e-01,  4.6129119016824094e-01,  5.5303826009505330e-01,
      6.3851917580755868e-01,  7.1676539863708522e-01,  7.8689035723754719e-01,
      8.4809948718019812e-01,  8.9969921819927690e-01,  9.4110478095105710e-01,
      9.7184660316626925e-01,  9.9157394284050038e-01,  1.0000000000000000e+00};
  static constexpr double GaussLobattoQuadWts30[] = {
      2.2988505747128306e-03, 1.4131799327905170e-02, 2.5283166740551061e-02,
      3.6142094199409398e-02, 4.6590694533141769e-02, 5.6511197923081409e-02,
      6.5791336397790348e-02, 7.4326003324718726e-02, 8.2018512833407303e-02,
      8.8781712319763520e-02, 9.4538975193861438e-02, 9.9225071004300974e-02,
      1.0278690530723540e-01, 1.0518412159645463e-01, 1.0638955872366648e-01,
      1.0638955872366794e-01, 1.0518412159645478e-01, 1.0278690530723525e-01,
      9.9225071004299684e-02, 9.4538975193860758e-02, 8.8781712319763617e-02,
      8.2018512833407414e-02, 7.4326003324718823e-02, 6.5791336397790182e-02,
      5.6511197923080569e-02, 4.6590694533143094e-02, 3.6142094199408670e-02,
      2.5283166740551453e-02, 1.4131799327905427e-02, 2.2988505747126029e-03};
  static constexpr double GaussLobattoQuadPts31[] = {
      -1.0000000000000000e+00, -9.9211684434648073e-01, -9.7365493581573648e-01,
      -9.4486917020803896e-01, -9.0606695144126959e-01, -8.5765999529745507e-01,
      -8.0016154319246358e-01, -7.3418113630907489e-01, -6.6041820261152551e-01,
      -5.7965465720800258e-01, -4.9274661909883211e-01, -4.0061533828056195e-01,
      -3.0423743127287239e-01, -2.0463452924752357e-01, -1.0286244876068174e-01,
      0.0000000000000000e+00,  1.0286244876068285e-01,  2.0463452924752457e-01,
      3.0423743127287284e-01,  4.0061533828056217e-01,  4.9274661909883277e-01,
      5.7965465720800224e-01,  6.6041820261152551e-01,  7.3418113630907533e-01,
      8.0016154319246313e-01,  8.5765999529745574e-01,  9.0606695144126981e-01,
      9.4486917020803929e-01,  9.7365493581573648e-01,  9.9211684434648117e-01,
      1.0000000000000000e+00};
  static constexpr double GaussLobattoQuadWts31[] = {
      2.1505376344082778e-03, 1.3222471025464089e-02, 2.3666433230270147e-02,
      3.3853940405224776e-02, 4.3681818160066589e-02, 5.3046465493448450e-02,
      6.1848741290455783e-02, 6.9995377594101460e-02, 7.7400032341477867e-02,
      8.3984220517528907e-02, 8.9678151045259905e-02, 9.4421468377856796e-02,
      9.8163893013712714e-02, 1.0086575479865058e-01, 1.0249841359547052e-01,
      1.0304456295320738e-01, 1.0249841359546978e-01, 1.0086575479864955e-01,
      9.8163893013712075e-02, 9.4421468377857823e-02, 8.9678151045260543e-02,
      8.3984220517530586e-02, 7.7400032341476382e-02, 6.9995377594100530e-02,
      6.1848741290454791e-02, 5.3046465493448776e-02, 4.3681818160067096e-02,
      3.3853940405224082e-02, 2.3666433230270283e-02, 1.3222471025464685e-02,
      2.1505376344085362e-03};
  static constexpr double GaussLobattoQuadPts32[] = {
      -1.0000000000000000e+00, -9.9260893397276106e-01, -9.7529469048270889e-01,
      -9.4828483841723177e-01, -9.1184993906373135e-01, -8.6635247601267440e-01,
      -8.1224473177744172e-01, -7.5006449393667363e-01, -6.8042975561554964e-01,
      -6.0403258714842112e-01, -5.2163226288156528e-01, -4.3404771720184709e-01,
      -3.4214940653888171e-01, -2.4685065885020530e-01, -1.4909859681364712e-01,
      -4.9864725046593561e-02, 4.9864725046593672e-02,  1.4909859681364712e-01,
      2.4685065885020552e-01,  3.4214940653888171e-01,  4.3404771720184687e-01,
      5.2163226288156528e-01,  6.0403258714842123e-01,  6.8042975561555086e-01,
      7.5006449393667474e-01,  8.1224473177744239e-01,  8.6635247601267551e-01,
      9.1184993906373180e-01,  9.4828483841723232e-01,  9.7529469048270923e-01,
      9.9260893397276140e-01,  1.0000000000000000e+00};
  static constexpr double GaussLobattoQuadWts32[] = {
      2.0161290322576919e-03, 1.2398106501372777e-02, 2.2199552889291634e-02,
      3.1775135410915603e-02, 4.1034201586062614e-02, 4.9885271336220401e-02,
      5.8240497248057278e-02, 6.6016877257153758e-02, 7.3137139602679951e-02,
      7.9530525692108597e-02, 8.5133497949669165e-02, 8.9890372957357856e-02,
      9.3753875546813289e-02, 9.6685608948002030e-02, 9.8656436540762005e-02,
      9.9646771501275197e-02, 9.9646771501276030e-02, 9.8656436540761658e-02,
      9.6685608948002794e-02, 9.3753875546814538e-02, 8.9890372957357995e-02,
      8.5133497949669124e-02, 7.9530525692106072e-02, 7.3137139602678758e-02,
      6.6016877257154369e-02, 5.8240497248055967e-02, 4.9885271336221310e-02,
      4.1034201586062663e-02, 3.1775135410915367e-02, 2.2199552889291849e-02,
      1.2398106501373839e-02, 2.0161290322580020e-03};
};

template <index_t order>
constexpr const double* get_gauss_lobatto_wts() {
  if constexpr (order == 1) {
    return GaussQuadData::GaussQuadWts1;
  } else if constexpr (order == 2) {
    return GaussLobattoQuadData::GaussLobattoQuadWts2;
  } else if constexpr (order == 3) {
    return GaussLobattoQuadData::GaussLobattoQuadWts3;
  } else if constexpr (order == 4) {
    return GaussLobattoQuadData::GaussLobattoQuadWts4;
  } else if constexpr (order == 5) {
    return GaussLobattoQuadData::GaussLobattoQuadWts5;
  } else if constexpr (order == 6) {
    return GaussLobattoQuadData::GaussLobattoQuadWts6;
  } else if constexpr (order == 7) {
    return GaussLobattoQuadData::GaussLobattoQuadWts7;
  } else if constexpr (order == 8) {
    return GaussLobattoQuadData::GaussLobattoQuadWts8;
  } else if constexpr (order == 9) {
    return GaussLobattoQuadData::GaussLobattoQuadWts9;
  } else if constexpr (order == 10) {
    return GaussLobattoQuadData::GaussLobattoQuadWts10;
  } else if constexpr (order == 11) {
    return GaussLobattoQuadData::GaussLobattoQuadWts11;
  } else if constexpr (order == 12) {
    return GaussLobattoQuadData::GaussLobattoQuadWts12;
  } else if constexpr (order == 13) {
    return GaussLobattoQuadData::GaussLobattoQuadWts13;
  } else if constexpr (order == 14) {
    return GaussLobattoQuadData::GaussLobattoQuadWts14;
  } else if constexpr (order == 15) {
    return GaussLobattoQuadData::GaussLobattoQuadWts15;
  } else if constexpr (order == 16) {
    return GaussLobattoQuadData::GaussLobattoQuadWts16;
  } else if constexpr (order == 17) {
    return GaussLobattoQuadData::GaussLobattoQuadWts17;
  } else if constexpr (order == 18) {
    return GaussLobattoQuadData::GaussLobattoQuadWts18;
  } else if constexpr (order == 19) {
    return GaussLobattoQuadData::GaussLobattoQuadWts19;
  } else if constexpr (order == 20) {
    return GaussLobattoQuadData::GaussLobattoQuadWts20;
  } else if constexpr (order == 21) {
    return GaussLobattoQuadData::GaussLobattoQuadWts21;
  } else if constexpr (order == 22) {
    return GaussLobattoQuadData::GaussLobattoQuadWts22;
  } else if constexpr (order == 23) {
    return GaussLobattoQuadData::GaussLobattoQuadWts23;
  } else if constexpr (order == 24) {
    return GaussLobattoQuadData::GaussLobattoQuadWts24;
  } else if constexpr (order == 25) {
    return GaussLobattoQuadData::GaussLobattoQuadWts25;
  } else if constexpr (order == 26) {
    return GaussLobattoQuadData::GaussLobattoQuadWts26;
  } else if constexpr (order == 27) {
    return GaussLobattoQuadData::GaussLobattoQuadWts27;
  } else if constexpr (order == 28) {
    return GaussLobattoQuadData::GaussLobattoQuadWts28;
  } else if constexpr (order == 29) {
    return GaussLobattoQuadData::GaussLobattoQuadWts29;
  } else if constexpr (order == 30) {
    return GaussLobattoQuadData::GaussLobattoQuadWts30;
  } else if constexpr (order == 31) {
    return GaussLobattoQuadData::GaussLobattoQuadWts31;
  } else if constexpr (order == 32) {
    return GaussLobattoQuadData::GaussLobattoQuadWts32;
  }
  return NULL;
}

template <index_t order>
constexpr const double* get_gauss_lobatto_pts() {
  if constexpr (order == 1) {
    return GaussQuadData::GaussQuadPts1;
  } else if constexpr (order == 2) {
    return GaussLobattoQuadData::GaussLobattoQuadPts2;
  } else if constexpr (order == 3) {
    return GaussLobattoQuadData::GaussLobattoQuadPts3;
  } else if constexpr (order == 4) {
    return GaussLobattoQuadData::GaussLobattoQuadPts4;
  } else if constexpr (order == 5) {
    return GaussLobattoQuadData::GaussLobattoQuadPts5;
  } else if constexpr (order == 6) {
    return GaussLobattoQuadData::GaussLobattoQuadPts6;
  } else if constexpr (order == 7) {
    return GaussLobattoQuadData::GaussLobattoQuadPts7;
  } else if constexpr (order == 8) {
    return GaussLobattoQuadData::GaussLobattoQuadPts8;
  } else if constexpr (order == 9) {
    return GaussLobattoQuadData::GaussLobattoQuadPts9;
  } else if constexpr (order == 10) {
    return GaussLobattoQuadData::GaussLobattoQuadPts10;
  } else if constexpr (order == 11) {
    return GaussLobattoQuadData::GaussLobattoQuadPts11;
  } else if constexpr (order == 12) {
    return GaussLobattoQuadData::GaussLobattoQuadPts12;
  } else if constexpr (order == 13) {
    return GaussLobattoQuadData::GaussLobattoQuadPts13;
  } else if constexpr (order == 14) {
    return GaussLobattoQuadData::GaussLobattoQuadPts14;
  } else if constexpr (order == 15) {
    return GaussLobattoQuadData::GaussLobattoQuadPts15;
  } else if constexpr (order == 16) {
    return GaussLobattoQuadData::GaussLobattoQuadPts16;
  } else if constexpr (order == 17) {
    return GaussLobattoQuadData::GaussLobattoQuadPts17;
  } else if constexpr (order == 18) {
    return GaussLobattoQuadData::GaussLobattoQuadPts18;
  } else if constexpr (order == 19) {
    return GaussLobattoQuadData::GaussLobattoQuadPts19;
  } else if constexpr (order == 20) {
    return GaussLobattoQuadData::GaussLobattoQuadPts20;
  } else if constexpr (order == 21) {
    return GaussLobattoQuadData::GaussLobattoQuadPts21;
  } else if constexpr (order == 22) {
    return GaussLobattoQuadData::GaussLobattoQuadPts22;
  } else if constexpr (order == 23) {
    return GaussLobattoQuadData::GaussLobattoQuadPts23;
  } else if constexpr (order == 24) {
    return GaussLobattoQuadData::GaussLobattoQuadPts24;
  } else if constexpr (order == 25) {
    return GaussLobattoQuadData::GaussLobattoQuadPts25;
  } else if constexpr (order == 26) {
    return GaussLobattoQuadData::GaussLobattoQuadPts26;
  } else if constexpr (order == 27) {
    return GaussLobattoQuadData::GaussLobattoQuadPts27;
  } else if constexpr (order == 28) {
    return GaussLobattoQuadData::GaussLobattoQuadPts28;
  } else if constexpr (order == 29) {
    return GaussLobattoQuadData::GaussLobattoQuadPts29;
  } else if constexpr (order == 30) {
    return GaussLobattoQuadData::GaussLobattoQuadPts30;
  } else if constexpr (order == 31) {
    return GaussLobattoQuadData::GaussLobattoQuadPts31;
  } else if constexpr (order == 32) {
    return GaussLobattoQuadData::GaussLobattoQuadPts32;
  }
  return NULL;
}

/**
 * @brief Compute the Lagrange basis with the given knots
 *
 * @tparam order Number of points
 * @param knots Knot points
 * @param pt Point to compute the interpolant
 * @param N Lagrange basis function values
 */
template <index_t order>
void lagrange_basis(const double knots[], const double pt, double N[]) {
  // Loop over the shape functions
  for (int i = 0; i < order; i++) {
    N[i] = 1.0;
    for (int j = 0; j < order; j++) {
      if (i != j) {
        double d = 1.0 / (knots[i] - knots[j]);
        N[i] *= (pt - knots[j]) * d;
      }
    }
  }
}

/**
 * @brief Compute the Lagrange basis with the given knots
 *
 * @tparam order Number of points
 * @param knots Knot points
 * @param pt Point to compute the interpolant
 * @param N Lagrange basis function values
 * @param N Derivative of the Lagrange basis function values
 */
template <index_t order>
void lagrange_basis(const double knots[], const double pt, double N[],
                    double Nx[]) {
  // Loop over the shape function knot locations
  for (int i = 0; i < order; i++) {
    N[i] = 1.0;
    Nx[i] = 0.0;

    // Loop over each point again, except for the current control
    // point, adding the contribution to the shape function
    for (int j = 0; j < order; j++) {
      if (i != j) {
        double d = 1.0 / (knots[i] - knots[j]);
        N[i] *= (pt - knots[j]) * d;

        // Now add up the contribution to the derivative
        for (int k = 0; k < order; k++) {
          if (k != i && k != j) {
            d *= (pt - knots[k]) / (knots[i] - knots[k]);
          }
        }

        // Add the derivative contribution
        Nx[i] += d;
      }
    }
  }
}

/**
 * @brief Evaluate the Bernstein shape functions at the given parametric point
 *
 * @tparam order the order of the polynomial
 * @param u the parametric coordinate
 * @param N the values of the shape functions at u
 */
template <index_t order>
inline void bernstein_basis(const double u, double* N) {
  double u1 = 0.5 * (1.0 - u);
  double u2 = 0.5 * (u + 1.0);

  N[0] = 1.0;
  for (int j = 1; j < order; j++) {
    double s = 0.0;
    for (int k = 0; k < j; k++) {
      double t = N[k];
      N[k] = s + u1 * t;
      s = u2 * t;
    }
    N[j] = s;
  }
}

/**
 * @brief Evaluate the shape functions and the derivative of the shape
 * functions with respect to the parameter coordinate
 *
 * @tparam order the order of the polynomial
 * @param u the parametric coordinate
 * @param N the values of the shape functions at u
 * @param Nd the derivative of the shape functions at u
 */
template <index_t order>
inline void bernstein_basis(const double u, double* N, double* Nd) {
  double u1 = 0.5 * (1.0 - u);
  double u2 = 0.5 * (u + 1.0);

  // Compute the basis for the order-1 bernstein polynomial
  N[0] = 1.0;
  for (int j = 1; j < order - 1; j++) {
    double s = 0.0;
    for (int k = 0; k < j; k++) {
      double t = N[k];
      N[k] = s + u1 * t;
      s = u2 * t;
    }
    N[j] = s;
  }

  // Add the contributions to the derivative
  for (int j = 0; j < order; j++) {
    Nd[j] = 0.0;
    if (j > 0) {
      Nd[j] += 0.5 * (order - 1) * N[j - 1];
    }
    if (j < order - 1) {
      Nd[j] -= 0.5 * (order - 1) * N[j];
    }
  }

  // Now compute the full order basis
  bernstein_basis<order>(u, N);
}

template <index_t order>
void lagrange_basis(const double pt, double N[]) {
  constexpr const double* knots = get_gauss_lobatto_pts<order>();
  lagrange_basis<order>(knots, pt, N);
}

template <index_t order>
void lagrange_basis(const double pt, double N[], double Nx[]) {
  constexpr const double* knots = get_gauss_lobatto_pts<order>();
  lagrange_basis<order>(knots, pt, N, Nx);
}

template <>
void lagrange_basis<1u>(const double pt, double N[]) {
  N[0] = 1.0;
}

template <>
void lagrange_basis<2u>(const double pt, double N[]) {
  N[0] = 0.5 * (1.0 - pt);
  N[1] = 0.5 * (1.0 + pt);
}

template <>
void lagrange_basis<3u>(const double pt, double N[]) {
  N[0] = -0.5 * pt * (1.0 - pt);
  N[1] = (1.0 - pt) * (1.0 + pt);
  N[2] = 0.5 * (1.0 + pt) * pt;
}

template <>
void lagrange_basis<1u>(const double pt, double N[], double Nx[]) {
  N[0] = 1.0;
  Nx[0] = 0.0;
}

template <>
void lagrange_basis<2u>(const double pt, double N[], double Nx[]) {
  N[0] = 0.5 * (1.0 - pt);
  N[1] = 0.5 * (1.0 + pt);

  Nx[0] = -0.5;
  Nx[1] = 0.5;
}

template <>
void lagrange_basis<3u>(const double pt, double N[], double Nx[]) {
  N[0] = -0.5 * pt * (1.0 - pt);
  N[1] = (1.0 - pt) * (1.0 + pt);
  N[2] = 0.5 * (1.0 + pt) * pt;

  Nx[0] = -0.5 + pt;
  Nx[1] = -2.0 * pt;
  Nx[2] = 0.5 + pt;
}

/**
 * @brief Interpolation type
 *
 * GLL interpolation: Interpolate from the Gauss-Legendre-Lobatto nodes
 *
 * Gauss interpolation: Interpolate from the Gauss quadrature points using
 * Lagrange interpolation
 *
 * Bernstein: Interpolate with Bernstein polynomials
 */
enum InterpolationType {
  GLL_INTERPOLATION,
  GAUSS_INTERPOLATION,
  BERNSTEIN_INTERPOLATION
};

template <index_t order, InterpolationType interp_type = GLL_INTERPOLATION>
inline void interpolation_basis(const double pt, double N[]) {
  if constexpr (interp_type == GLL_INTERPOLATION) {
    constexpr const double* knots = get_gauss_lobatto_pts<order>();
    lagrange_basis<order>(knots, pt, N);
  } else if constexpr (interp_type == GAUSS_INTERPOLATION) {
    constexpr const double* knots = get_gauss_quadrature_pts<order>();
    lagrange_basis<order>(knots, pt, N);
  } else {  // interp_type == BERNSTEIN_INTERPOLATION
    bernstein_basis<order>(pt, N);
  }
}

template <index_t order, InterpolationType interp_type = GLL_INTERPOLATION>
inline void interpolation_basis(const double pt, double N[], double Nx[]) {
  if constexpr (interp_type == GLL_INTERPOLATION) {
    constexpr const double* knots = get_gauss_lobatto_pts<order>();
    lagrange_basis<order>(knots, pt, N, Nx);
  } else if constexpr (interp_type == GAUSS_INTERPOLATION) {
    constexpr const double* knots = get_gauss_quadrature_pts<order>();
    lagrange_basis<order>(knots, pt, N);
  } else {  // interp_type == BERNSTEIN_INTERPOLATION
    bernstein_basis<order>(pt, N, Nx);
  }
}

template <index_t order, InterpolationType interp_type = GLL_INTERPOLATION>
constexpr const double* get_interpolation_pts() {
  if constexpr (interp_type == GLL_INTERPOLATION) {
    return get_gauss_lobatto_pts<order>();
  } else if constexpr (interp_type == GAUSS_INTERPOLATION) {
    return get_gauss_quadrature_pts<order>();
  } else {  // interp_type == BERNSTEIN_INTERPOLATION
    return get_gauss_lobatto_pts<order>();
  }
}

}  // namespace A2D

#endif  //  A2D_LAGRANGE_TOOLS